@model IEnumerable<Notes.DB.Note>

@{
    ViewBag.Title = "PublishedNotes";
    var list = new SelectList(new List<SelectListItem>
    {
        new SelectListItem { Text = "Поиск по аголовоку", Value = "title"},
        new SelectListItem { Text = "Поиск по тегам", Value = "tags"},
    }, "Value", "Text");
}

<h2>Опубликованные заметки</h2>

<div class="form-group">
    @Html.Label("Поиск", new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.Editor("search", new { htmlAttributes = new { @id = "search" } })
        <input type="button" value="Найти" onclick="ASearchAndSort(this)" class="btn btn-default" />
        @Html.DropDownList("searchFields", list, new { @id = "field", @class = "btn btn-default" })
    </div>
</div>
<hr /> <hr />

<div id="result">
    <table class="table">
        <tr>
            <th>
                <a onclick="ASearchAndSort(this)" id="title" data->Заголовок</a>
            </th>
            <th>
                <a onclick="ASearchAndSort(this)" id="user" data->Пользователь</a>
            </th>
            <th>
                <a onclick="ASearchAndSort(this)" id="tags" data->Теги</a>
            </th>
            <th>
                <a onclick="ASearchAndSort(this)" id="date" data->Дата создания</a>
            </th>
            <th>
                <a onclick="ASearchAndSort(this)" id="public" data->Опубликовано</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.File)
            </th>
            <th></th>
        </tr>
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @{
                            string title = item.Title.Length > 30 ? item.Title.Substring(0, 30) + "..." : item.Title;
                        }
                        @Html.DisplayFor(modelItem => title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Login)
                    </td>
                    <td>
                        @*@Html.Display(string.Join(" ", item.Tags.Select(t => t.TagName)));*@
                        @string.Join(" ", item.Tags.Select(t => t.TagName))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Published)
                    </td>
                    <td>
                        @if (item.File != null)
                        {
                            <a href="/Note/Download/@item.Id"><img src="~/Content/img/download.png" height="17" /></a>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Посмотреть", "Details", new { Id = item.Id })
                        @if (User.Identity.Name == item.User.Login)
                        {
                            @Html.ActionLink(" Изменить", "Edit", new { Id = item.Id })
                            @Html.ActionLink(" Удалить", "Delete", new { Id = item.Id })
                        }
                    </td>
                </tr>
            }
        }
    </table>
</div>

<script>
    function ASearchAndSort(v) {
        var searchVal = $("#search").val();
        var searchField = $("#field").val();
        var model = { searchPattern: searchVal, searchField: searchField, sortColumn: v.id };
        $.ajax({
            url: '@Url.Action("SearchAndSort", "Note")',
            type: 'POST',
            cache: false,
            data: model,
            success: function (result) {
                $("#result").html(result);
            }
        });
    }
</script>